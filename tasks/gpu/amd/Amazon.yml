---

- name: Verify whether AMD Drivers are Installed
  shell: lsmod | grep -i amd
  become: true
  register: amd_drivers
  changed_when: false
  failed_when: false

- name: Save whether AMD Drivers are installed
  set_fact:
    amd_driver_installed: "{{ True if amd_drivers.rc == 0 else False }}"

# AMD Drivers Installation Block.
- block:

  - name: Create a local temporary directory
    tempfile:
      state: directory
      suffix: drivers
    register: amd_local_drivers_directory
    run_once: true
    delegate_to: localhost

  - name: Download AMD Drivers
    amazon.aws.s3_object:
      bucket: "{{ amd_bucket }}"
      object: "{{ [amd_bucket_prefix, amd_driver_object] | path_join }}"
      dest: "{{ [amd_local_drivers_directory.path, amd_driver_object] | path_join }}"
      region: "{{ amd_bucket_region }}"
      mode: get
    delegate_to: localhost
    run_once: true

  - name: Upload AMD Drivers
    copy:
      src: "{{ [amd_local_drivers_directory.path, amd_driver_object] | path_join }}"
      dest: "{{ ansible_user_dir }}"
      mode: 0700

  - name: Deflate AMD Drivers
    unarchive:
      src: "{{ [ansible_user_dir, amd_driver_object] | path_join }}"
      dest: "{{ ansible_user_dir }}"
      remote_src: true

  - name: Install AMD Drivers
    command:
      cmd: "{{ [ansible_user_dir, amd_driver_identifier, 'amdgpu-pro-install'] | path_join }} -y --opencl=pal,legacy"
    register: amd_drivers
    failed_when: false
    become: true

  - name: Reboot
    reboot:
      reboot_timeout: 1800
    become: true
    when: amd_drivers.changed
  
  when: not amd_driver_installed

- name: Create xorg.conf file
  copy:
    src: files/xorg/xorg.amd.conf
    dest: '{{ xorg_conf_path }}'
    mode: 0755
  become: true
