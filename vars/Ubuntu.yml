---

# The default user.
user: ubuntu

# Distribution.
distribution_name: "{{ ansible_distribution | lower }}{{ ansible_distribution_version | replace('.', '') }}"

# A list of native packages to install
# before installing the distribution packages.
# These packages are pre-requisites and should not
# be modified.
package_prerequisites:
  - gnupg2
  - gnupg-agent
  - apt-transport-https
  - snapd
  - flatpak
  - rsync
  - git
  - curl
  - wget
  - zip
  - unzip
  - ca-certificates
  - dkms
  - python3-pip
  - pkg-config
  - binutils

# Native packages to install.
native_packages:
  - mosh
  - tmux
  - socat
  - build-essential
  - vim
  - jq
  - exa
  - fzf
  - gh
  - neofetch
  - ffmpeg
  - mplayer
  - gparted
  - httpie
  - bat
  - nfs-common

signing_keys: []

apt_keys:
  - https://dl.google.com/linux/linux_signing_key.pub

apt_repositories:
  - ppa:flatpak/stable

# NiceDCV.
nicedcv_major_version: "2023.1"
nicedcv_package_version: "16388"
nicedcv_gl_version: "1047"
nicedcv_xdcv_version: "565"
nicedcv_folder_name: "nice-dcv-{{ nicedcv_major_version }}-{{ nicedcv_package_version }}-{{ distribution_name }}-{{ architecture }}"
nicedcv_package_url: "https://d1uj6qtbmh3dt5.cloudfront.net/{{ nicedcv_major_version }}/Servers/{{ nicedcv_folder_name }}.tgz"
nicedcv_server_package: "nice-dcv-server_{{ nicedcv_major_version }}.{{ nicedcv_package_version }}-1_{{ alt_architecture }}.{{ distribution_name }}.deb"
nicedcv_web_viewer_package: "nice-dcv-web-viewer_{{ nicedcv_major_version }}.{{ nicedcv_package_version }}-1_{{ alt_architecture }}.{{ distribution_name }}.deb"
nicedcv_gl_package: "nice-dcv-gl_{{ nicedcv_major_version }}.{{ nicedcv_gl_version }}-1_{{ alt_architecture }}.{{ distribution_name }}.deb"
nicedcv_xdcv_package: "nice-xdcv_{{ nicedcv_major_version }}.{{ nicedcv_xdcv_version }}-1_{{ alt_architecture }}.{{ distribution_name }}.deb"

# Nvidia.
nvidia_keyring_url: "https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/{{ ansible_architecture }}/cuda-keyring_1.0-1_all.deb"

# AMD.
amd_installer_url: "https://repo.radeon.com/amdgpu-install/6.2/ubuntu/{{ ansible_distribution_release }}/amdgpu-install_6.2.60200-1_all.deb"
amd_gpu_driver: "/opt/amdgpu/lib/xorg/modules/drivers/amdgpu_drv.so"
radeon_profile_repository: "ppa:radeon-profile/stable"

# Firewall.
firewall_configuration:
  - direction: incoming
    policy: deny
  - direction: outgoing
    policy: allow
firewall_rules:
  - rule: allow
    port: 22
    proto: tcp
  - rule: allow
    port: 8443
    proto: tcp
  - rule: allow
    port: 8443
    proto: udp

# Docker.
docker_gpg_key:
  "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"

docker_repository:
  "deb [arch={{ docker_architecture_map[ansible_architecture].value }}]
   https://download.docker.com/linux/{{ ansible_distribution | lower }}
   {{ ansible_distribution_release }} stable"

# Map between the Ansible architecture name and the
# architecture name associated with the AWS SSM package.
aws_ssm_architecture_map:
  x86_64:
    value: amd64
  amd64:
    value: amd64
  armv6l:
    value: arm
  armv7l:
    value: arm
  arm64:
    value: arm
  aarch64:
    value: arm
  i386:
    value: "386"
  i686:
    value: "386"

# AWS SSM Agent.
aws_ssm_snap_name: amazon-ssm-agent
aws_ssm_snap_service_name: snap.amazon-ssm-agent.amazon-ssm-agent.service
aws_ssm_snap_cli_name: /snap/amazon-ssm-agent/current/amazon-ssm-agent
